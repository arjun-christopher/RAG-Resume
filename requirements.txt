# ===================================================================
# RAG-Resume Requirements - Updated for Fast Semantic RAG System
# ===================================================================

# Core web framework and data processing
streamlit>=1.28.0
pandas>=2.0.0
numpy>=1.24.0

# Progress bars and utilities
tqdm>=4.65.0

# Document processing and parsing
pdfplumber>=0.9.0
python-docx>=0.8.11
Pillow>=10.0.0
pypdf>=3.0.0

# ===================================================================
# FAST SEMANTIC RAG CORE DEPENDENCIES
# ===================================================================

# High-speed embedding models (FastEmbed - primary choice for speed)
fastembed>=0.2.0

# Lightweight sentence transformers (fallback option) - stable version
sentence-transformers>=2.2.0,<3.0.0

# Ultra-fast vector search with FAISS
faiss-cpu>=1.7.4

# Fast text processing and BM25 search
rank-bm25>=0.2.2

# Advanced NLP for pattern detection (lightweight spaCy model)
spacy>=3.6.0

# LangChain for document management and LLM integration
langchain>=0.1.0
langchain-community>=0.0.20
langchain-core>=0.1.0
langchain-text-splitters>=0.0.1

# ===================================================================
# ADDITIONAL RAG FRAMEWORKS (Optional - for extended functionality)
# ===================================================================

# Advanced RAG frameworks
langchain-openai>=0.0.5
langchain-google-genai>=0.0.5
langchain-groq>=0.0.1
langchain-huggingface>=0.0.1
langchain-anthropic>=0.0.1
llama-index>=0.9.0
llama-index-core>=0.9.0
llama-index-embeddings-huggingface>=0.1.0
llama-index-llms-ollama>=0.1.0

# RAG evaluation
ragas>=0.1.0

# ===================================================================
# VECTOR DATABASES (Optional - for production deployments)
# ===================================================================

chromadb>=0.4.0
qdrant-client>=1.6.0
weaviate-client>=3.24.0
pinecone-client>=2.2.0

# ===================================================================
# MACHINE LEARNING AND NLP
# ===================================================================

# Core ML frameworks (stable versions for compatibility)
transformers>=4.30.0
torch>=2.0.0
torchvision>=0.15.0
torchaudio>=2.0.0
nltk>=3.8.0

# Advanced embedding models
instructor>=0.4.0

# Scikit-learn for TF-IDF fallback embeddings
scikit-learn>=1.3.0

# Open-source model integrations
ollama>=0.1.0
huggingface-hub>=0.16.0
accelerate>=0.20.0
bitsandbytes>=0.41.0

# Advanced NLP and text processing
textstat>=0.7.0
dateparser>=1.1.0
phonenumbers>=8.13.0
sentence-splitter>=1.4.0

# ===================================================================
# ADVANCED RESUME PARSING (Optional)
# ===================================================================

pyresparser>=1.0.6
layoutparser>=0.3.4

# Advanced ML frameworks for RAG
dspy-ai>=2.4.0
haystack-ai>=2.0.0

# Graph database
neo4j>=5.12.0

# ColBERT for advanced retrieval
colbert-ir>=0.2.0

# ===================================================================
# COMPUTER VISION AND OCR (Optional)
# ===================================================================

easyocr>=1.7.0
pytesseract>=0.3.10
opencv-python>=4.8.0

# ===================================================================
# API INTEGRATIONS
# ===================================================================

openai>=1.0.0
anthropic>=0.7.0
google-generativeai>=0.3.0
groq>=0.4.0

# ===================================================================
# UTILITIES AND VISUALIZATION
# ===================================================================

python-dotenv>=1.0.0
plotly>=5.15.0
requests>=2.31.0
regex>=2023.6.3
wordcloud>=1.9.0

# Advanced NER & Information Extraction
spacy-transformers>=1.2.0

# ===================================================================
# POST-INSTALLATION COMMANDS
# ===================================================================
# After installing requirements, run these commands:
# 
# For spaCy models (required for pattern extraction):
# python -m spacy download en_core_web_sm
# python -m spacy download en_core_web_trf  # Optional: for better accuracy
#
# For transformers NER model (optional):
# Use: dbmdz/bert-large-cased-finetuned-conll03-english
# ===================================================================
